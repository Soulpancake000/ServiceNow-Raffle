<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function($scope,spUtil,$uibModal) {
	var c = this;
	var i = 0;
	//var length = c.data.list.length;


	/*var refreshIntervalId = setInterval(function(){
		c.data.display = c.data.list[i].name;
		i++;
		if (i == (length)) i = 0;
		spUtil.update($scope);
	}, 70);*/

	$scope.pick = function() {
		c.data.picked = true;
		//c.data.winnerID = i;
		c.server.update();
		//clearInterval(refreshIntervalId);
	}

	$scope.confirm = function(){
		c.data.confirmed = true;
	}

	$scope.repick = function(){
		c.data.repick = true;
		c.server.update();
	}

	$scope.repickandremove = function(){
		c.data.repick = true;
		c.data.repickandremove = true;
		c.server.update();
	}

	$scope.serverUpdate = function() {
		c.server.update();
		//alert(c.data.username);
	}

	c.openModal = function(name, sys_id) {
		c.data.remove_name = name;
		c.data.remove_sys_id = sys_id;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate',
			scope: $scope
		});
	}
	
	c.openModal2 = function(name, sys_id) {
		c.data.reset_name = name;
		c.data.reset_sys_id = sys_id;
		c.modalInstance = $uibModal.open({
			templateUrl: 'modalTemplate2',
			scope: $scope
		});
	}

	c.closeModal = function() {
		c.modalInstance.close();
	}

	c.removeEntry = function(sys_id) {
		c.data.confirmed_remove_sys_id = sys_id;
		c.server.update();
		c.modalInstance.close();
	}
	
	c.resetResults = function(sys_id) {
		c.data.picked = false;
		c.data.confirmed_reset_raffle = sys_id;
		c.server.update();
		c.modalInstance.close();
	}
	
	c.removeAllEntries = function(sys_id) {
		c.data.picked = false;
		c.data.confirmed_remove_raffle = sys_id;
		c.server.update();
		c.modalInstance.close();
	}
	
	$scope.reset = function() {
		c.data.reset = true;
		c.data.picked = false;
		c.data.winner = '';
		c.server.update();
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.widget {
  background-color: white;
  border: 25px solid white;
  border-radius: 5px;
  padding-left: 30px;
  padding-right: 30px;
  margin: 25px;
  margin-bottom: 20px;
}

.footlocker {
  border-radius: 5px;
  padding-left: 30px;
  padding-right: 30px;
  margin: 25px;
  margin-bottom: 20px;
}

.reset {
  text-align: right;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>raffle-entries</id>
        <internal>false</internal>
        <link/>
        <name>raffle_entries</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	data.raffle = $sp.getParameter('raffle');
	data.list = [];
	data.picked = false;
	data.present = false;
	data.confirmed = false;
	data.repick = false;
	data.repickandremove = false;
	data.no_entries = false;
	data.already_entered = false;
	data.title = 'No raffle chosen from criteria';
	data.has_winners = false;
	data.test = '';
	data.winners = '';

	var gr7 = new GlideRecord('x_uocd2_raffle_table');
	gr7.get(data.raffle);
	data.title = gr7.number + ': ' + gr7.u_raffle_name + '';
	
	if (input !=null && input.reset == true){
		var gr10 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr10.addQuery('u_raffle', data.raffle);
		gr10.addEncodedQuery('u_winner=true^ORu_present=false');
		gr10.query();
		while(gr10.next()){
			gr10.u_winner = false;
			gr10.u_present = true;
			gr10.update();
		}
		data.reset = false;
		data.winners = '';
	}

	if (input != null && input.entry_name != null && input.entry_name != ''){
		var gr6 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr6.addQuery('u_raffle', data.raffle);
		gr6.addQuery('u_name', input.entry_name+'');
		gr6.query();
		if (gr6.next()){
			data.already_entered = true;
			data.entry_name = '';
		} else {
			var gr5 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
			gr5.initialize();
			gr5.u_name = input.entry_name + '';
			gr5.u_raffle = data.raffle;
			gr5.insert();
			data.entry_name = '';
		}
	}

	if (input != null && input.confirmed_remove_sys_id){
		var gr9 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr9.get(input.confirmed_remove_sys_id);
		gr9.deleteRecord();
	}
	
	if (input != null && input.confirmed_reset_raffle){
		var gr11 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr11.addQuery('u_raffle', input.confirmed_reset_raffle);
		gr11.addEncodedQuery('u_winner=true^ORu_present=false');
		gr11.query();
		while(gr11.next()){
			gr11.u_winner = false;
			gr11.u_present = true;
			gr11.update();
		}
		data.confirmed_reset_raffle = false;
		data.picked = false;
		data.repick = false;
		data.winners = '';
		data.winner = '';
	}
	
	if (input != null && input.confirmed_remove_raffle){
		var gr12 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr12.addQuery('u_raffle', input.confirmed_remove_raffle);
		gr12.deleteMultiple();
		data.confirmed_remove_raffle = false;
		data.picked = false;
		data.repick = false;
		data.winners = '';
		data.winner = '';
	}
	
	if (input != null && input.repick == true){
		data.picked = false;
		var gr3 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr3.addQuery('u_winner', true);
		gr3.addQuery('u_raffle', data.raffle);
		gr3.query();
		if (gr3.next()){
			gr3.u_winner = false;
			if (input.repickandremove == true) gr3.u_present = false;
			gr3.update();
		}
	}

	var gr = new GlideRecord('x_uocd2_raffle_raffle_entrant');
	gr.addQuery('u_present', true);
	gr.addQuery('u_winner', false);
	gr.addQuery('u_raffle', data.raffle);
	gr.orderBy('u_name');
	gr.query();
	data.entrants = gr.getRowCount();
	if (data.entrants == 0){
		data.no_entries = true;
		var gr4 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr4.addQuery('u_present', true);
		gr4.addQuery('u_winner', true);
		gr4.addQuery('u_raffle', data.raffle);
		gr4.query();
		if (gr4.next()){
			gr4.u_winner = false;
			gr4.u_present = false;
			gr4.update();
		}
		return;
	}

	while (gr.next()){
		var entrant = {};
		entrant.name = gr.u_name+'';
		entrant.sys_id = gr.sys_id+'';
		data.list.push(entrant);
	}

	if (input != null && (input.picked == true || input.repick == true)){
		data.picked = true;
		data.winnerID = Math.floor(Math.random() * gr.getRowCount());
		var gr2 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
		gr2.get(data.list[data.winnerID].sys_id+'');
		gr2.u_winner = true;
		gr2.update(); 
		data.winner = gr2.u_name + '!';
		data.winnerSysID = gr2.sys_id;
		//data.list.splice(data.winnerID, 1);
	}
	
	var gr8 = new GlideRecord('x_uocd2_raffle_raffle_entrant');
	gr8.addQuery('u_winner', true);
	gr8.addQuery('u_raffle', data.raffle);
	gr8.orderBy('u_name');
	gr8.query();
	while (gr8.next()){
		data.has_winners = true;
		data.winners += gr8.u_name + '. ';
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin-eduque</sys_created_by>
        <sys_created_on>2018-08-09 21:10:55</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>64e9edca0f3753006717590be1050e7e</sys_id>
        <sys_mod_count>368</sys_mod_count>
        <sys_name>raffle_entries</sys_name>
        <sys_package display_value="Raffle" source="x_uocd2_raffle">3736a9860f3753006717590be1050eeb</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Raffle">3736a9860f3753006717590be1050eeb</sys_scope>
        <sys_update_name>sp_widget_64e9edca0f3753006717590be1050e7e</sys_update_name>
        <sys_updated_by>admin-eduque</sys_updated_by>
        <sys_updated_on>2018-08-16 22:21:36</sys_updated_on>
        <template><![CDATA[<div class="widget">
  <div>
    <b>Raffle {{data.title}}</b>
  </div>
  <div ng-if="data.no_entries == false">
    <div>
      <p>
        Total Entrants: {{data.entrants}}
      </p>
    </div>
    <div>
      <p>
        <button type="button" class="btn btn-default" ng-click="pick()">
          Draw a winner!
        </button>
      </p>
      <p>
        And the winner is... <b>{{data.winner}}</b>
      </p>
      <div ng-if="data.has_winners == true">
        <p>
          <b>Drawn winners:</b> {{data.winners}}
        </p>
      </div>
    </div>
    <div ng-if="data.picked == true && (data.confirmed == false || data.confirmed == null)">
      <p>
        Is this person present?
      </p>
      <p>
        <button type="button" class="btn btn-default" ng-click="confirm()">
          Yes, confirmed
        </button>
      </p>
      <p>
        <button type="button" class="btn btn-default" ng-click="repick()">
          No, pick another person
        </button>
      </p>
      <p>
        <button type="button" class="btn btn-default" ng-click="repickandremove()">
          No, pick another person<br>and remove this person
        </button>
      </p>
    </div>
    <p>
      <b>Entries:</b> <ng-container ng-repeat="entry in data.list">
      <button ng-click="c.openModal(entry.name, entry.sys_id)">
        {{entry.name}}
      </button> 
      </ng-container>
    </p>
  </div>
  <div ng-if="data.no_entries == true">
    There are no entries for this raffle yet!
  </div>
</div>
<div class="widget">
  <div>
    <form>
      <p>
        Or add another entry: <input class="form-control" type="text" placeholder="Name" ng-model="c.data.entry_name"/>
        <button type="button" class="btn btn-default" ng-click="serverUpdate()">Add to drawing</button>
      </p>
      <p>
        <a href="?id=mass_entry&raffle={{data.raffle}}">Or add entries en masse.</a>
      </p>
      <div class="reset">
        <p>
          <button class="btn btn-default" ng-click="c.openModal2(data.title, data.raffle)">Reset all entries</button>
        </p>
      </div>
    </form>
  </div>
  <div ng-if="data.already_entered == true">
    That name has already been entered into this drawing.
  </div>
</div>
<div class="widget">
  <a href="?id=raffle">Click here</a> to return to the raffle selection page.
</div>

<script type="text/ng-template" id="modalTemplate">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Remove {{data.remove_name}} from drawing?</h4>
  </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary" ng-click="c.removeEntry(data.remove_sys_id)">${Remove}</button>
			<button class="btn btn-primary" ng-click="c.closeModal()">${Cancel}</button>
  </div>
  </div>
</script>

<script type="text/ng-template" id="modalTemplate2">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h4 class="panel-title">Reset all entries for {{data.reset_name}}?</h4>
  </div>
		<div class="panel-footer text-right">
    	<button class="btn btn-primary" ng-click="c.resetResults(data.reset_sys_id)">${Reset Results}</button>
      <button class="btn btn-primary" ng-click="c.removeAllEntries(data.reset_sys_id)">${Remove All Entries}</button>
			<button class="btn btn-primary" ng-click="c.closeModal()">${Cancel}</button>
  </div>
  </div>
</script>]]></template>
    </sp_widget>
</record_update>
